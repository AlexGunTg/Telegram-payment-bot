from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import logging
import os

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = os.getenv("BOT_TOKEN")
print(f"BOT_TOKEN: {BOT_TOKEN}")  # –û—Ç–ª–∞–¥–∫–∞

ADMIN_USERNAME = os.getenv("ADMIN_USERNAME")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã
start_kb = ReplyKeyboardMarkup(resize_keyboard=True)
start_kb.add(KeyboardButton("üí≥ –û–ø–ª–∞—Ç–∞"))

currency_kb = ReplyKeyboardMarkup(resize_keyboard=True)
currency_kb.row("–†—É–±–ª–∏", "PayPal").row("–ï–≤—Ä–æ", "–î–æ–ª–ª–∞—Ä").row("–ì—Ä–∏–≤–Ω–∞", "USDT –≤ Binance").add("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")

@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    text = ("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì—É–Ω—å–∫–æ.\n"
            "–Ø –º–∞—Å—Å–∞–∂–∏—Å—Ç-—Ä–µ–∞–±–∏–ª–∏—Ç–æ–ª–æ–≥, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Ö–∞—Ç—Ö–∞-–π–æ–≥–∏ –∏ –≤–µ–¥—É—â–∏–π –∫–∞–Ω–∞–ª–æ–≤ ¬´–ê–Ω–∞—Ç–æ–º–∏—è –∏ –ë–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞¬ª.\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–û–ø–ª–∞—Ç–∞¬ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.")
    await message.answer(text, reply_markup=start_kb)

@dp.message_handler(lambda message: message.text == "üí≥ –û–ø–ª–∞—Ç–∞")
async def payment_options(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", reply_markup=currency_kb)

@dp.message_handler(lambda message: message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def back_to_start(message: types.Message):
    await send_welcome(message)

@dp.message_handler(lambda message: message.text in ["–†—É–±–ª–∏", "PayPal", "–ï–≤—Ä–æ", "–î–æ–ª–ª–∞—Ä", "–ì—Ä–∏–≤–Ω–∞", "USDT –≤ Binance"])
async def send_payment_details(message: types.Message):
    text = {
        "–†—É–±–ª–∏": "–ö–∞—Ä—Ç–∞ –¢–∏–Ω—å–∫–æ—Ñ—Ñ: 5536 9140 8865 7683",
        "PayPal": "PayPal: jivoemilo@gmail.com",
        "–ï–≤—Ä–æ": ("IBAN: GB48CLJU00997186505114\n"
                 "–ö–∞—Ä—Ç–∞: 5375 4199 0916 1356\n"
                 "–ò–º—è: HUNKO OLEKSANDR\n"
                 "–ë–∞–Ω–∫: 15 Kingsway, London WC2B 6UN"),
        "–î–æ–ª–ª–∞—Ä": ("IBAN: UA713220010000026202333147176\n"
                   "–ö–∞—Ä—Ç–∞: 5375 4188 1395 9798\n"
                   "–ò–º—è: HUNKO OLEKSANDR\n"
                   "–ë–∞–Ω–∫: 15 Kingsway, London WC2B 6UN"),
        "–ì—Ä–∏–≤–Ω–∞": "–ö–∞—Ä—Ç–∞ –ú–æ–Ω–æ–±–∞–Ω–∫: 4441 1114 0091 0463",
        "USDT –≤ Binance": ("–ö–æ—à–µ–ª—ë–∫: TWMVgvk1nx3QCWVnZrZvh4w8EPLH5XbynE\n"
                           "–°–µ—Ç—å: Tron (TRC20)")
    }[message.text]
    await message.answer(text + "\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Ñ–æ—Ç–æ —á–µ–∫–∞.")

@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_receipt(message: types.Message):
    admin_username = ADMIN_USERNAME
    caption = f"üí∞ –ù–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂ –æ—Ç @{message.from_user.username or message.from_user.id}"
    await bot.send_photo(chat_id=admin_username, photo=message.photo[-1].file_id, caption=caption)
    await message.answer("–°–ø–∞—Å–∏–±–æ! –í–∞—à —á–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

@dp.message_handler(content_types=types.ContentType.DOCUMENT)
async def handle_document_receipt(message: types.Message):
    admin_username = ADMIN_USERNAME
    file_id = message.document.file_id
    caption = f"üìé –ù–æ–≤—ã–π —Ñ–∞–π–ª –æ—Ç @{message.from_user.username or message.from_user.id}"
    await bot.send_document(chat_id=admin_username, document=file_id, caption=caption)
    await message.answer("–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω. –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
