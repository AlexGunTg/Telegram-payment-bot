from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import logging
import os
import asyncio
from dotenv import load_dotenv

load_dotenv()

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_USERNAME = os.getenv("ADMIN_USERNAME")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã
start_kb = ReplyKeyboardMarkup(resize_keyboard=True)
start_kb.add(KeyboardButton("üí≥ –û–ø–ª–∞—Ç–∞"))

currency_kb = ReplyKeyboardMarkup(resize_keyboard=True)
currency_kb.row("–†—É–±–ª—å", "PayPal", "–ï–≤—Ä–æ", "–î–æ–ª–ª–∞—Ä").row("–ì—Ä–∏–≤–Ω–∞", "USDT –≤ Binance").add("üîô –ù–∞–∑–∞–¥")

@dp.message(commands=["start"])
async def send_welcome(message: types.Message):
    text = (
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì—É–Ω—å–∫–æ.\n"
        "–Ø –º–∞—Å—Å–∞–∂–∏—Å—Ç-—Ä–µ–∞–±–∏–ª–∏—Ç–æ–ª–æ–≥, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Ö–∞—Ç—Ö–∞-–π–æ–≥–∏ –∏ –≤–µ–¥—É—â–∏–π –∫–∞–Ω–∞–ª–æ–≤ ¬´–ê–Ω–∞—Ç–æ–º–∏—è –∏ –ë–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞¬ª.\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–û–ø–ª–∞—Ç–∞¬ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã."
    )
    await message.answer(text, reply_markup=start_kb)

@dp.message(lambda message: message.text == "üí≥ –û–ø–ª–∞—Ç–∞")
async def payment_options(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:", reply_markup=currency_kb)

@dp.message(lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_start(message: types.Message):
    await send_welcome(message)

@dp.message(lambda message: message.text in ["–†—É–±–ª—å", "PayPal", "–ï–≤—Ä–æ", "–î–æ–ª–ª–∞—Ä", "–ì—Ä–∏–≤–Ω–∞", "USDT –≤ Binance"])
async def send_payment_details(message: types.Message):
    text = (
        "–†–µ–∫–≤–∏–∑–∏—Ç—ã:\n"
        "–†—É–±–ª—å: –ö–∞—Ä—Ç–∞ –¢–∏–Ω—å–∫–æ—Ñ—Ñ: 5536 9140 8865 7683\n"
        "PayPal: jivoemilol@gmail.com\n"
        "–ï–≤—Ä–æ: IBAN: GB48CLJU00997186505114\n"
        "–ö–∞—Ä—Ç–∞: 5375 4195 0916 1136\n"
        "–ò–º—è: HUNKO OLEKSANDR\n"
        "–ë–∞–Ω–∫: 15 Kingsway, London WC2B 6UN\n"
        "–î–æ–ª–ª–∞—Ä: IBAN: UA7132200100000260233414716\n"
        "–ö–∞—Ä—Ç–∞: 5375 4188 1395 9798\n"
        "–ò–º—è: HUNKO OLEKSANDR\n"
        "–ë–∞–Ω–∫: 15 Kingsway, London WC2B 6UN\n"
        "–ì—Ä–∏–≤–Ω–∞: –ö–∞—Ä—Ç–∞ –ú–æ–Ω–æ–±–∞–Ω–∫: 4441 1114 0091 0463\n"
        "USDT –≤ Binance: –ö–æ—à–µ–ª—ë–∫: TMWKyhk13XCqWvnZrZh4w8EPLH5XbyneY\n"
        "–°–µ—Ç—å: Tron (TRC20)"
    )
    await message.answer(text + "\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Ñ–æ—Ç–æ —á–µ–∫–∞.")

@dp.message(content_types=types.ContentType.PHOTO)
async def handle_receipt(message: types.Message):
    caption = f"–ù–æ–≤—ã–π –ø–ª–∞—Ç—ë–∂ –æ—Ç @{message.from_user.username or message.from_user.id}"
    await bot.send_photo(chat_id=ADMIN_USERNAME, photo=message.photo[-1].file_id, caption=caption)
    await message.answer("–°–ø–∞—Å–∏–±–æ! –í–∞—à —á–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
